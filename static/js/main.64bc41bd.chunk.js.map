{"version":3,"sources":["components/StyledChart.js","components/UseFetch.js","components/TypeChart.js","components/DirectorChart.js","components/CastChart.js","components/CountryChart.js","components/YearChart.js","components/ListedInChart.js","App.js","reportWebVitals.js","index.js"],"names":["StyledChart","props","chartTextStyle","color","width","height","chartType","loader","data","options","title","titleTextStyle","chartArea","colors","hAxis","minValue","textStyle","vAxis","axisTitle","gridlines","format","legend","backgroundColor","fill","useFetch","url","useState","setData","a","fetch","response","json","useEffect","fetchData","TypeChart","numMovies","Movie","numShows","DirectorChart","directorNames","Object","keys","directorData","role","concat","map","name","CastChart","castNames","castData","CountryChart","countryNames","countryData","YearChart","yearNames","yearData","ListedInChart","listedInNames","listedInData","apiRoute","App","typeData","topYearData","bottomYearData","oldestMovies","oldestTV","className","href","target","d","director","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64bc41bd.chunk.js","sourcesContent":["import React from 'react'; \r\nimport ReactDOM from 'react-dom'; \r\nimport Chart from \"react-google-charts\"\r\n  \r\nconst StyledChart= (props)=>\r\n{\r\n    const chartTextStyle = {color: '#FFF'};\r\n\r\n  return (\r\n    <Chart\r\n    width={'95vw'}\r\n    height= {props?.height ?? '33vh'}\r\n    chartType=\"BarChart\"\r\n    loader={<div>Loading Chart</div>}\r\n    data={props.data}\r\n    options={{\r\n      title: props.title,\r\n      titleTextStyle: {\r\n        color: chartTextStyle,\r\n      },\r\n      chartArea: { width: '80%' },\r\n      colors: ['#0f4c75'],\r\n      hAxis: {\r\n        minValue: 0,\r\n        textStyle: chartTextStyle,\r\n          titleTextStyle: chartTextStyle,\r\n      },\r\n      vAxis: {\r\n        title: props.axisTitle,\r\n        gridlines: {color: '#787878'},\r\n        textStyle: chartTextStyle,\r\n          titleTextStyle: chartTextStyle,\r\n        format: '0'\r\n      },\r\n      legend:{\r\n        textStyle: chartTextStyle\r\n      },\r\n      backgroundColor : { fill:'transparent' }\r\n    }}\r\n  />\r\n  )\r\n}\r\n  \r\nexport default StyledChart;","import React, { useState, useEffect } from 'react';\r\n\r\nconst useFetch = (url, options) => {\r\n    const [data, setData] = useState(null);\r\n    async function fetchData(options) {\r\n      const response = await fetch(url, options);\r\n      const json = await response.json();\r\n      setData(json);  \r\n    }\r\n  \r\n    useEffect(() => {fetchData(options)},[url]);  return data;\r\n  };\r\n\r\n  export default useFetch;","import React from 'react'; \r\nimport ReactDOM from 'react-dom'; \r\nimport StyledChart from './StyledChart'\r\n\r\nfunction TypeChart(props) {\r\n\r\n    const numMovies = props.data != null ? props.data.Movie : 0;\r\n    const numShows = props.data != null ? props.data['TV Show'] : 0;\r\n\r\n    return (\r\n        props.data === null ? <p>Loading...</p> : \r\n            <StyledChart \r\n              title={'Netflix contains ' + numMovies + ' movies and '+ numShows +' TV Shows'}\r\n              data={[\r\n                ['Type', 'Number of Titles'],\r\n                ['Movies', numMovies],\r\n                ['TV Shows', numShows]\r\n              ]}  \r\n              axisTitle='Type'\r\n            />\r\n    );\r\n  }\r\n\r\nexport default TypeChart;","import React from 'react'; \r\nimport ReactDOM from 'react-dom'; \r\nimport StyledChart from './StyledChart'\r\n\r\nfunction DirectorChart(props) {\r\n\r\n    const directorNames = props.data === null ? [] : Object.keys(props.data);\r\n    let directorHeaders = [\r\n      ['Director Name', 'Number of Titles', { role: 'annotation' }]\r\n    ];\r\n    const directorData = directorHeaders.concat(directorNames.map((name) => [name, props.data[name], props.data[name]]))\r\n\r\n    return (\r\n      directorData === null ? <p>Loading...</p> : \r\n        <StyledChart \r\n        title='Top 5 directors with the most titles'\r\n        data={directorData}  \r\n        height={'50vh'}\r\n        axisTitle='Director'\r\n      />\r\n    );\r\n  }\r\n\r\nexport default DirectorChart;","import React from 'react'; \r\nimport ReactDOM from 'react-dom'; \r\nimport StyledChart from './StyledChart'\r\n\r\nfunction CastChart(props) {\r\n\r\n    const castNames = props.data === null ? [] : Object.keys(props.data);\r\n    let castHeaders = [\r\n      ['Country Name', 'Number of Titles', { role: 'annotation' }]\r\n    ];\r\n    const castData = castHeaders.concat(castNames.map((name) => [name, props.data[name], props.data[name]]))\r\n\r\n    return (\r\n      castData === null ? <p>Loading...</p> : \r\n        <StyledChart \r\n        title='Top 5 cast members with the most titles'\r\n        data={castData}  \r\n        height={'50vh'}\r\n        axisTitle='Cast Member'\r\n      />\r\n    );\r\n  }\r\n\r\nexport default CastChart;","import React from 'react'; \r\nimport ReactDOM from 'react-dom'; \r\nimport StyledChart from './StyledChart'\r\n\r\nfunction CountryChart(props) {\r\n\r\n    const countryNames = props.data === null ? [] : Object.keys(props.data);\r\n    let countryHeaders = [\r\n      ['Country', 'Number of Titles', { role: 'annotation' }]\r\n    ];\r\n    const countryData = countryHeaders.concat(countryNames.map((name) => [name, props.data[name], props.data[name]]))\r\n\r\n    return (\r\n      countryData === null ? <p>Loading...</p> : \r\n        <StyledChart \r\n        title='Top 10 countries with the most titles'\r\n        data={countryData}  \r\n        height={'60vh'}\r\n        axisTitle='Country'\r\n      />\r\n    );\r\n  }\r\n\r\nexport default CountryChart;","import React from 'react'; \r\nimport ReactDOM from 'react-dom'; \r\nimport StyledChart from './StyledChart'\r\n\r\nfunction YearChart(props) {\r\n\r\n    const yearNames = props.data === null ? [] : Object.keys(props.data);\r\n    let yearHeaders = [\r\n      ['Year', 'Number of Titles', { role: 'annotation' }]\r\n    ];\r\n    const yearData = yearHeaders.concat(yearNames.map((name) => [name, props.data[name], props.data[name]]))\r\n\r\n    return (\r\n      yearData === null ? <p>Loading...</p> : \r\n        <StyledChart \r\n        title={props.title}\r\n        data={yearData}  \r\n        height={'60vh'}\r\n        axisTitle='Year'\r\n      />\r\n    );\r\n  }\r\n\r\nexport default YearChart;","import React from 'react'; \r\nimport ReactDOM from 'react-dom'; \r\nimport StyledChart from './StyledChart'\r\n\r\nfunction ListedInChart(props) {\r\n\r\n    const listedInNames = props.data === null ? [] : Object.keys(props.data);\r\n    let listedInHeaders = [\r\n      ['Listed In', 'Number of Titles', { role: 'annotation' }]\r\n    ];\r\n    const listedInData = listedInHeaders.concat(listedInNames.map((name) => [name, props.data[name], props.data[name]]))\r\n\r\n    return (\r\n      listedInData === null ? <p>Loading...</p> : \r\n        <StyledChart \r\n        title='Top 10 Categories titles are listed in'\r\n        data={listedInData}  \r\n        height={'60vh'}\r\n        axisTitle='Listed In'\r\n      />\r\n    );\r\n  }\r\n\r\nexport default ListedInChart;","import './App.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Chart from \"react-google-charts\"\r\nimport StyledChart from './components/StyledChart';\r\nimport useFetch from './components/UseFetch';\r\nimport TypeChart from './components/TypeChart';\r\nimport DirectorChart from './components/DirectorChart';\r\nimport CastChart from './components/CastChart';\r\nimport CountryChart from './components/CountryChart';\r\nimport YearChart from './components/YearChart';\r\nimport ListedInChart from './components/ListedInChart';\r\n\r\nconst apiRoute = 'https://dklitsch.pythonanywhere.com'\r\n\r\nfunction App() {\r\n\r\n  const typeData = useFetch(`${apiRoute}/type`);\r\n\r\n  const directorData = useFetch(`${apiRoute}/director/top5`);\r\n\r\n  const castData = useFetch(`${apiRoute}/cast/top5`);\r\n\r\n  const countryData = useFetch(`${apiRoute}/country/top10`);\r\n\r\n  const topYearData = useFetch(`${apiRoute}/releaseyear/top10`);\r\n\r\n  const bottomYearData = useFetch(`${apiRoute}/releaseyear/bottom10`);\r\n\r\n  const listedInData = useFetch(`${apiRoute}/listedin/top10`);\r\n\r\n  const oldestMovies = useFetch(`${apiRoute}/movie?order=asc&take=5`);\r\n\r\n  const oldestTV = useFetch(`${apiRoute}/tvshow?order=asc&take=5`);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n        <p>\r\n          Hi, welcome to my Netflix Analysis Dashboard!\r\n        </p>\r\n\r\n        <p>This dashboard displays some interesting statistics about Netflix titles as of 2019. The goal is to present the data in an intuitive and accessable way.</p>\r\n        \r\n        <p>This project is based on <a href=\"https://www.kaggle.com/shivamb/netflix-shows\" target=\"_blank\">this</a> dataset from Flixable. </p>\r\n\r\n        <TypeChart data={typeData} />\r\n\r\n        <DirectorChart data={directorData} />\r\n\r\n        <CastChart data={castData} />\r\n\r\n        <CountryChart data={countryData} />\r\n\r\n        <h2>Netflix skews heavily towards newer titles, half of all titles were released after 2017!</h2>\r\n\r\n        <YearChart data={topYearData} title='10 years with the most Netflix titles'/>\r\n\r\n        <YearChart data={bottomYearData} title='10 years with the least Netflix titles'/>\r\n\r\n        <h2>Top 5 Oldest movies</h2>\r\n\r\n        <ol>\r\n          {oldestMovies != null && oldestMovies.map( d => <li key= {d.title}>{d.title} by {d.director ?? 'unlisted'} - {d['release_year']}</li>)}\r\n        </ol>\r\n\r\n        <h2>Top 5 Oldest TV shows</h2>\r\n\r\n        <ol>\r\n          {oldestTV != null && oldestTV.map( d => <li key= {d.title}>{d.title} - {d['release_year']}</li>)}\r\n        </ol>\r\n\r\n        <ListedInChart data={listedInData} />\r\n        \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}