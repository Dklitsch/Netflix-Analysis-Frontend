{"version":3,"sources":["components/UseFetch.js","components/StyledChart.js","components/TypeChart.js","components/DirectorChart.js","components/CastChart.js","components/CountryChart.js","components/YearChart.js","components/ListedInChart.js","components/ApiData.js","components/Views/HomeView.js","components/Views/DirectorView.js","components/SearchBar.js","components/AnalysisAppBar.js","components/Views/CastView.js","App.js","reportWebVitals.js","index.js"],"names":["useFetch","url","options","useState","data","setData","a","fetch","response","json","useEffect","fetchData","StyledChart","props","chartTextStyle","color","width","height","chartType","loader","title","titleTextStyle","chartArea","colors","hAxis","minValue","textStyle","vAxis","axisTitle","gridlines","format","legend","backgroundColor","fill","TypeChart","numMovies","Movie","numShows","DirectorChart","directorNames","Object","keys","directorData","role","concat","map","name","directorTemplate","CastChart","castNames","castData","CountryChart","countryNames","countryData","YearChart","yearNames","yearData","ListedInChart","listedInNames","listedInData","apiRoute","HomeView","typeData","topYearData","bottomYearData","oldestMovies","oldestTV","href","target","d","director","DirectorView","useParams","directorCollabs","castCollabs","codirectorNames","cleanedCollabs","count","replace","w","c","toUpperCase","capitalizeName","length","country","to","useStyles","makeStyles","theme","search","position","borderRadius","shape","fade","palette","common","white","marginRight","spacing","marginLeft","breakpoints","up","searchIcon","padding","pointerEvents","display","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","typography","SearchBar","classes","divRef","useRef","searchFieldValue","setSearchFieldValue","inputValue","setInputValue","redirectLink","setRedirectLink","searchTerms","popoverOpen","setPopoverOpen","className","Popover","anchorEl","current","anchorOrigin","vertical","horizontal","transformOrigin","open","onClose","Typography","onSubmit","e","type","term","preventDefault","Autocomplete","id","getOptionLabel","option","size","value","ref","onChange","event","onInputChange","newInputValue","renderInput","params","InputProps","Input","style","aria-describedby","inputProps","AnalysisAppBar","React","setAnchorEl","handleMenuClose","AppBar","Toolbar","Grid","container","direction","justify","IconButton","edge","aria-label","onClick","currentTarget","keepMounted","Boolean","MenuItem","variant","CastView","createMuiTheme","primary","main","App","ThemeProvider","class","path","children","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3fb97b4b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst useFetch = (url, options) => {\r\n    const [data, setData] = useState(null);\r\n    async function fetchData(options) {\r\n      const response = await fetch(url, options);\r\n      const json = await response.json();\r\n      setData(json);  \r\n    }\r\n  \r\n    useEffect(() => {fetchData(options)},[url]);  return data;\r\n  };\r\n\r\n  export default useFetch;","import React from 'react'; \r\nimport ReactDOM from 'react-dom'; \r\nimport Chart from \"react-google-charts\"\r\n  \r\nconst StyledChart= (props)=>\r\n{\r\n    const chartTextStyle = {color: '#FFF'};\r\n\r\n  return (\r\n    <Chart\r\n    width={'95vw'}\r\n    height= {props?.height ?? '33vh'}\r\n    chartType=\"BarChart\"\r\n    loader={<div>Loading Chart</div>}\r\n    data={props.data}\r\n    options={{\r\n      title: props.title,\r\n      titleTextStyle: {\r\n        color: chartTextStyle,\r\n      },\r\n      chartArea: { width: '80%' },\r\n      colors: ['#0f4c75'],\r\n      hAxis: {\r\n        minValue: 0,\r\n        textStyle: chartTextStyle,\r\n          titleTextStyle: chartTextStyle,\r\n      },\r\n      vAxis: {\r\n        title: props.axisTitle,\r\n        gridlines: {color: '#787878'},\r\n        textStyle: chartTextStyle,\r\n          titleTextStyle: chartTextStyle,\r\n        format: '0'\r\n      },\r\n      legend:{\r\n        textStyle: chartTextStyle\r\n      },\r\n      backgroundColor : { fill:'transparent' }\r\n    }}\r\n  />\r\n  )\r\n}\r\n  \r\nexport default StyledChart;","import React from 'react'; \r\nimport ReactDOM from 'react-dom'; \r\nimport StyledChart from './StyledChart'\r\n\r\nfunction TypeChart(props) {\r\n\r\n    const numMovies = props.data != null ? props.data.Movie : 0;\r\n    const numShows = props.data != null ? props.data['TV Show'] : 0;\r\n\r\n    return (\r\n        props.data === null ? <p>Loading...</p> : \r\n            <StyledChart \r\n              title={'Netflix contains ' + numMovies + ' movies and '+ numShows +' TV Shows'}\r\n              data={[\r\n                ['Type', 'Number of Titles'],\r\n                ['Movies', numMovies],\r\n                ['TV Shows', numShows]\r\n              ]}  \r\n              axisTitle='Type'\r\n            />\r\n    );\r\n  }\r\n\r\nexport default TypeChart;","import React from 'react'; \r\nimport ReactDOM from 'react-dom'; \r\nimport { Link } from 'react-router-dom';\r\nimport StyledChart from './StyledChart'\r\n\r\nfunction DirectorChart(props) {\r\n\r\n    const directorNames = props.data === null ? [] : Object.keys(props.data);\r\n    let directorHeaders = [\r\n      ['Director Name', 'Number of Titles', { role: 'annotation' }]\r\n    ];\r\n    const directorTemplate = (name) => [name, props.data[name], props.data[name]];\r\n    const directorData = directorHeaders.concat(directorNames.map(name => directorTemplate(name)));\r\n\r\n    return (\r\n      directorData === null ? <p>Loading...</p> : \r\n        <StyledChart \r\n        title='Top 5 directors with the most titles'\r\n        data={directorData}  \r\n        height={'50vh'}\r\n        axisTitle='Director'\r\n      />\r\n    );\r\n  }\r\n\r\nexport default DirectorChart;","import React from 'react'; \r\nimport ReactDOM from 'react-dom'; \r\nimport StyledChart from './StyledChart'\r\n\r\nfunction CastChart(props) {\r\n\r\n    const castNames = props.data === null ? [] : Object.keys(props.data);\r\n    let castHeaders = [\r\n      ['Country Name', 'Number of Titles', { role: 'annotation' }]\r\n    ];\r\n    const castData = castHeaders.concat(castNames.map((name) => [name, props.data[name], props.data[name]]))\r\n\r\n    return (\r\n      castData === null ? <p>Loading...</p> : \r\n        <StyledChart \r\n        title='Top 5 cast members with the most titles'\r\n        data={castData}  \r\n        height={'50vh'}\r\n        axisTitle='Cast Member'\r\n      />\r\n    );\r\n  }\r\n\r\nexport default CastChart;","import React from 'react'; \r\nimport ReactDOM from 'react-dom'; \r\nimport StyledChart from './StyledChart'\r\n\r\nfunction CountryChart(props) {\r\n\r\n    const countryNames = props.data === null ? [] : Object.keys(props.data);\r\n    let countryHeaders = [\r\n      ['Country', 'Number of Titles', { role: 'annotation' }]\r\n    ];\r\n    const countryData = countryHeaders.concat(countryNames.map((name) => [name, props.data[name], props.data[name]]))\r\n\r\n    return (\r\n      countryData === null ? <p>Loading...</p> : \r\n        <StyledChart \r\n        title='Top 10 countries with the most titles'\r\n        data={countryData}  \r\n        height={'60vh'}\r\n        axisTitle='Country'\r\n      />\r\n    );\r\n  }\r\n\r\nexport default CountryChart;","import React from 'react'; \r\nimport ReactDOM from 'react-dom'; \r\nimport StyledChart from './StyledChart'\r\n\r\nfunction YearChart(props) {\r\n\r\n    const yearNames = props.data === null ? [] : Object.keys(props.data);\r\n    let yearHeaders = [\r\n      ['Year', 'Number of Titles', { role: 'annotation' }]\r\n    ];\r\n    const yearData = yearHeaders.concat(yearNames.map((name) => [name, props.data[name], props.data[name]]))\r\n\r\n    return (\r\n      yearData === null ? <p>Loading...</p> : \r\n        <StyledChart \r\n        title={props.title}\r\n        data={yearData}  \r\n        height={'60vh'}\r\n        axisTitle='Year'\r\n      />\r\n    );\r\n  }\r\n\r\nexport default YearChart;","import React from 'react'; \r\nimport ReactDOM from 'react-dom'; \r\nimport StyledChart from './StyledChart'\r\n\r\nfunction ListedInChart(props) {\r\n\r\n    const listedInNames = props.data === null ? [] : Object.keys(props.data);\r\n    let listedInHeaders = [\r\n      ['Listed In', 'Number of Titles', { role: 'annotation' }]\r\n    ];\r\n    const listedInData = listedInHeaders.concat(listedInNames.map((name) => [name, props.data[name], props.data[name]]))\r\n\r\n    return (\r\n      listedInData === null ? <p>Loading...</p> : \r\n        <StyledChart \r\n        title='Top 10 Categories titles are listed in'\r\n        data={listedInData}  \r\n        height={'60vh'}\r\n        axisTitle='Listed In'\r\n      />\r\n    );\r\n  }\r\n\r\nexport default ListedInChart;","const apiRoute = 'https://dklitsch.pythonanywhere.com'\r\n\r\nexport default apiRoute;","import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom'; \r\nimport useFetch from '../UseFetch';\r\nimport Chart from \"react-google-charts\"\r\nimport StyledChart from '../StyledChart';\r\nimport TypeChart from '../TypeChart';\r\nimport DirectorChart from '../DirectorChart';\r\nimport CastChart from '../CastChart';\r\nimport CountryChart from '../CountryChart';\r\nimport YearChart from '../YearChart';\r\nimport ListedInChart from '../ListedInChart';\r\nimport apiRoute, {typeData, directorData, castData} from '../ApiData';\r\n\r\nfunction HomeView(props) {\r\n\r\n    const typeData = useFetch(`${apiRoute}/type`);\r\n\r\n    const directorData = useFetch(`${apiRoute}/director/top5`);\r\n\r\n    const castData = useFetch(`${apiRoute}/cast/top5`);\r\n\r\n    const countryData = useFetch(`${apiRoute}/country/top10`);\r\n\r\n    const topYearData = useFetch(`${apiRoute}/releaseyear/top10`);\r\n\r\n    const bottomYearData = useFetch(`${apiRoute}/releaseyear/bottom10`);\r\n\r\n    const listedInData = useFetch(`${apiRoute}/listedin/top10`);\r\n\r\n    const oldestMovies = useFetch(`${apiRoute}/movie?order=asc&take=5`);\r\n\r\n    const oldestTV = useFetch(`${apiRoute}/tvshow?order=asc&take=5`);\r\n\r\n    return (\r\n    <>\r\n        <p>\r\n          Hi, welcome to my Netflix Analysis Dashboard!\r\n        </p>\r\n\r\n        <p>This dashboard displays some interesting statistics about Netflix titles The goal is to present the data in an intuitive and accessable way.</p>\r\n        \r\n        <p>This project is based on <a href=\"https://www.kaggle.com/shivamb/netflix-shows\" target=\"_blank\">this</a> dataset from Flixable. </p>\r\n\r\n        <TypeChart data={typeData} />\r\n\r\n        <DirectorChart data={directorData} />\r\n\r\n        <p>Only around 7% of TV shows list directors, notable exceptions being documentarians like Alastair Fothergill with 3 titles and Ken Burns with 2.</p>\r\n\r\n        <CastChart data={castData} />\r\n\r\n        <CountryChart data={countryData} />\r\n\r\n        <h2>Netflix skews heavily towards newer titles, half of all titles were released after 2017!</h2>\r\n\r\n        <YearChart data={topYearData} title='10 years with the most Netflix titles'/>\r\n\r\n        <YearChart data={bottomYearData} title='10 years with the least Netflix titles'/>\r\n\r\n        <h2>Top 5 Oldest movies</h2>\r\n\r\n        <ol>\r\n          {oldestMovies != null && oldestMovies.map( d => <li key= {d.title}>{d.title} by {d.director ?? 'unlisted'} - {d['release_year']}</li>)}\r\n        </ol>\r\n\r\n        <h2>Top 5 Oldest TV shows</h2>\r\n\r\n        <ol>\r\n          {oldestTV != null && oldestTV.map( d => <li key= {d.title}>{d.title} - {d['release_year']}</li>)}\r\n        </ol>\r\n\r\n        <ListedInChart data={listedInData} />\r\n        \r\n    </>\r\n    );\r\n  }\r\n\r\nexport default HomeView;","import { makeStyles } from '@material-ui/styles';\r\nimport React from 'react'; \r\nimport ReactDOM from 'react-dom'; \r\nimport { useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport apiRoute from '../ApiData';\r\nimport useFetch from '../UseFetch';\r\n\r\nfunction DirectorView(props) {\r\n\r\n    const { name } = useParams();\r\n\r\n    const capitalizeName = (name) => name.replace(/\\w\\S*/g, (w) => (w.replace(/^\\w/, (c) => c.toUpperCase())))\r\n    const directorData = useFetch(`${apiRoute}/director/${name}`);\r\n    const directorCollabs = useFetch(`${apiRoute}/director/${name}/director collabs`);\r\n    const castCollabs = useFetch(`${apiRoute}/director/${name}/cast collabs`);\r\n    const codirectorNames = directorCollabs === null ? [] : Object.keys(directorCollabs);\r\n    const collabNames = castCollabs === null ? [] : Object.keys(castCollabs);\r\n    let cleanedCollabs = collabNames.map(name => { return { name: name, count: castCollabs[name]}})\r\n    \r\n\r\n    return (\r\n      <div>\r\n        {directorData != null &&\r\n          <div>\r\n            <h2>{capitalizeName(name)}</h2>\r\n            <h4>{directorData.length} Titles: </h4>\r\n            <p>\r\n              {directorData.map( d => <div key={d.title}>{d.title} - {d.country} - {d['release_year']}</div>)}\r\n            </p>\r\n            <h4>Frequent co-directors: </h4>\r\n            <p>\r\n              {codirectorNames.map(name => <div key={name}><Link to={`/director/${name}`}>{name}</Link>: {directorCollabs[name]} titles</div>)}\r\n            </p>\r\n            <h4>Frequent collaborators: </h4>\r\n            <p>\r\n              {cleanedCollabs.map(a => <div key={a.name}><Link to={`/cast/${a.name}`}>{a.name}</Link>: {a.count} titles</div>)}\r\n            </p>\r\n          </div>}\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default DirectorView;","import React, { useRef, useState } from 'react'; \r\nimport ReactDOM from 'react-dom';\r\nimport { AppBar, Grid, IconButton, Input, InputBase, Popover, Popper, TextField, Toolbar, Typography } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport apiRoute from './ApiData';\r\nimport useFetch from './UseFetch';\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport { Redirect } from 'react-router';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginRight: theme.spacing(2),\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: 'auto',\r\n      },\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: '60ch',\r\n      },\r\n      color: 'white'\r\n    },\r\n    typography: {\r\n        padding: theme.spacing(1),\r\n      },\r\n  }))\r\n\r\n  export default function SearchBar(props) {\r\n    const classes = useStyles();\r\n    const divRef = useRef();\r\n\r\n    const [searchFieldValue, setSearchFieldValue] = useState('');\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [redirectLink, setRedirectLink] = useState('');\r\n    const searchTerms = useFetch(`${apiRoute}/searchterms/${inputValue}`) ?? []\r\n\r\n    const [popoverOpen, setPopoverOpen] = useState(true);\r\n\r\n    const searchBoxId = 'search-box';\r\n\r\n    const handleSubmit = (e) => {\r\n        if (searchFieldValue?.type != null && searchFieldValue?.term != null)\r\n          {\r\n            setRedirectLink(`/${searchFieldValue?.type}/${searchFieldValue?.term}`);\r\n          }   \r\n        e.preventDefault();  \r\n      }\r\n\r\n      return(\r\n        <div>\r\n        {redirectLink !== '' && <Redirect to={redirectLink} />}\r\n        <div className={classes.search}>\r\n        <Popover \r\n            anchorEl={divRef.current}\r\n            anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'left',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'right',\r\n              }}\r\n            open={popoverOpen}\r\n            onClose={() => setPopoverOpen(false)}\r\n            >\r\n            <Typography className={classes.typography}>In this box you can search for directors -></Typography>\r\n        </Popover>\r\n        <div className={classes.searchIcon}>\r\n            <SearchIcon />\r\n        </div>\r\n        <form onSubmit={handleSubmit}>\r\n        <Autocomplete\r\n                id=\"free-solo-demo\"\r\n                className={classes.inputRoot}\r\n                options={searchTerms}\r\n                getOptionLabel={(option) => option != '' ? `${option.type}: ${option.term}` : ''}\r\n                size=\"small\"\r\n                value={searchFieldValue}\r\n                ref={divRef}\r\n                onChange={(event, option) => {\r\n                    setSearchFieldValue(option);\r\n                  }}\r\n                inputValue={inputValue}\r\n                onInputChange={(event, newInputValue) => {\r\n                    setInputValue(newInputValue);\r\n                  }}\r\n                renderInput={(params) => (\r\n                    \r\n                    <div ref={params.InputProps.ref}>\r\n                        <Input style={{ width: 400 }} \r\n                            aria-describedby={searchBoxId}\r\n                            type=\"text\" {...params.inputProps} \r\n                            className={classes.inputInput} \r\n                            //onChange={getNewTerms}\r\n                        />\r\n                    </div>\r\n                )}\r\n            />\r\n            </form>\r\n        </div>\r\n        </div>\r\n      )\r\n  }","import React from 'react'; \r\nimport ReactDOM from 'react-dom';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { AppBar, Grid, IconButton, Input, InputBase, Menu, MenuItem, TextField, Toolbar, Typography } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete'\r\nimport apiRoute from './ApiData';\r\nimport useFetch from './UseFetch';\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport SearchBar from './SearchBar';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function AnalysisAppBar(props) {\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleMenuOpen = (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <AppBar color=\"primary\" position=\"fixed\">\r\n        <Toolbar>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n              <MenuIcon onClick={handleMenuOpen} />\r\n              <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleMenuClose}\r\n              >\r\n                <MenuItem onClick={handleMenuClose}><Link to='/'>Home</Link></MenuItem>\r\n              </Menu>\r\n            </IconButton>\r\n            <div>\r\n              <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"flex-end\"\r\n              alignItems=\"center\"\r\n              >\r\n                <SearchBar></SearchBar>\r\n                <Typography variant=\"h6\">Netflix Analysis Dashboard</Typography>\r\n              </Grid>\r\n            </div>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n}","import { makeStyles } from '@material-ui/styles';\r\nimport React from 'react'; \r\nimport ReactDOM from 'react-dom'; \r\nimport { useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport apiRoute from '../ApiData';\r\nimport useFetch from '../UseFetch';\r\n\r\nfunction CastView(props) {\r\n\r\n    const { name } = useParams();\r\n\r\n    const capitalizeName = (name) => name.replace(/\\w\\S*/g, (w) => (w.replace(/^\\w/, (c) => c.toUpperCase())))\r\n    const castData = useFetch(`${apiRoute}/cast/${name}`);\r\n    const directorCollabs = useFetch(`${apiRoute}/cast/${name}/director collabs`);\r\n    const castCollabs = useFetch(`${apiRoute}/director/${name}/cast collabs`);\r\n    const codirectorNames = directorCollabs === null ? [] : Object.keys(directorCollabs);\r\n    const collabNames = castCollabs === null ? [] : Object.keys(castCollabs);\r\n    let cleanedCollabs = collabNames.map(name => { return { name: name, count: castCollabs[name]}})\r\n    \r\n\r\n    return (\r\n      <div>\r\n        {castData != null &&\r\n          <div>\r\n            <h2>{capitalizeName(name)}</h2>\r\n            <h4>{castData.length} Titles: </h4>\r\n            <p>\r\n              {castData.map( d => <div key={d.title}>{d.title} - {d.country} - {d['release_year']}</div>)}\r\n            </p>\r\n            <h4>Frequent directed by: </h4>\r\n            <p>\r\n              {codirectorNames.map(name => <div key={name}><Link to={`/director/${name}`}>{name}</Link>: {directorCollabs[name]} titles</div>)}\r\n            </p>\r\n            <h4>Frequent collaborators: </h4>\r\n            <p>\r\n              {cleanedCollabs.map(a => <div key={a.name}><Link to={`/cast/${a.name}`}>{a.name}</Link>: {a.count} titles</div>)}\r\n            </p>\r\n          </div>}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default CastView;","import './App.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, } from \"react-router-dom\";\r\nimport { Toolbar } from '@material-ui/core';\r\nimport HomeView from './components/Views/HomeView'\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport DirectorView from './components/Views/DirectorView';\r\nimport AnalysisAppBar from './components/AnalysisAppBar';\r\nimport CastView from './components/Views/CastView';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#0f4c75',\r\n    }\r\n  },\r\n});\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Router>\r\n      <ThemeProvider theme={theme}>\r\n        <div class=\"App\">\r\n          \r\n          <AnalysisAppBar />\r\n\r\n          <Toolbar></Toolbar>\r\n          \r\n          <Switch>\r\n            <Route path=\"/director/:name\" children={<DirectorView/>} />\r\n            <Route path=\"/cast/:name\" children={<CastView/>} />\r\n            <Route path=\"/\" component={HomeView} />\r\n          </Switch>\r\n        </div>\r\n      </ThemeProvider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <App />, document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}