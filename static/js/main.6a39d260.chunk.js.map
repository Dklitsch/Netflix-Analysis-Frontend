{"version":3,"sources":["components/UseFetch.js","components/StyledBarChart.js","components/TypeChart.js","components/DirectorChart.js","components/CastChart.js","components/CountryBarChart.js","components/YearChart.js","components/ListedInChart.js","components/ApiData.js","components/Views/HomeView.js","components/Views/DirectorView.js","components/SearchBar.js","components/AnalysisAppBar.js","components/Views/CastView.js","components/Utilities.js","components/Views/CountryView.js","App.js","reportWebVitals.js","index.js"],"names":["useFetch","url","options","useState","data","setData","a","fetch","response","json","useEffect","fetchData","StyledChart","props","chartTextStyle","color","width","height","chartType","loader","title","titleTextStyle","chartArea","colors","hAxis","minValue","textStyle","gridlines","multiple","vAxis","axisTitle","format","legend","backgroundColor","fill","TypeChart","numMovies","Movie","numShows","DirectorChart","directorNames","Object","keys","directorData","role","concat","map","name","directorTemplate","CastChart","castNames","castData","CountryChart","countryNames","countryData","YearChart","yearNames","yearData","ListedInChart","listedInNames","listedInData","apiRoute","HomeView","typeData","countryTop10Data","topYearData","bottomYearData","oldestMovies","oldestTV","href","target","CountryBarChart","src","d","directorList","director","split","to","reduce","prev","curr","DirectorView","useParams","directorCollabs","castCollabs","codirectorNames","cleanedCollabs","count","replace","w","c","toUpperCase","capitalizeName","length","countryList","country","console","log","useStyles","makeStyles","theme","search","position","borderRadius","shape","fade","palette","common","white","marginRight","spacing","marginLeft","breakpoints","up","searchIcon","padding","pointerEvents","display","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","typography","SearchBar","classes","searchFieldValue","setSearchFieldValue","inputValue","setInputValue","redirectLink","setRedirectLink","searchTerms","className","onSubmit","e","type","term","preventDefault","Autocomplete","getOptionLabel","option","size","value","onChange","event","onInputChange","newInputValue","renderInput","params","ref","InputProps","Input","style","aria-describedby","inputProps","popover","border","AnalysisAppBar","anchorEl","setAnchorEl","divRef","useRef","showTutorial","setShowTutorial","handleMenuClose","current","focus","AppBar","Toolbar","Grid","container","direction","justify","IconButton","edge","aria-label","onClick","currentTarget","id","keepMounted","open","Boolean","onClose","MenuItem","Typography","onBlur","tabindex","variant","CastView","CountryView","topDirectors","topCast","cleanedDirectors","sort","b","cleanedCast","titleCount","createMuiTheme","primary","main","App","ThemeProvider","class","path","children","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6a39d260.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst useFetch = (url, options) => {\r\n    const [data, setData] = useState(null);\r\n    async function fetchData(options) {\r\n      const response = await fetch(url, options);\r\n      const json = await response.json();\r\n      setData(json);  \r\n    }\r\n  \r\n    useEffect(() => {fetchData(options)},[url]);  return data;\r\n  };\r\n\r\n  export default useFetch;","import React from 'react'; \r\nimport ReactDOM from 'react-dom'; \r\nimport Chart from \"react-google-charts\"\r\n  \r\nconst StyledChart= (props)=>\r\n{\r\n    const chartTextStyle = {color: '#FFF'};\r\n\r\n  return (\r\n    <Chart\r\n    width={'95vw'}\r\n    height= {props?.height ?? '33vh'}\r\n    chartType=\"BarChart\"\r\n    loader={<div>Loading Chart</div>}\r\n    data={props.data}\r\n    options={{\r\n      title: props.title,\r\n      titleTextStyle: {\r\n        color: chartTextStyle,\r\n      },\r\n      chartArea: { width: '80%' },\r\n      colors: ['#0f4c75'],\r\n      hAxis: {\r\n        minValue: 0,\r\n        textStyle: chartTextStyle,\r\n          titleTextStyle: chartTextStyle,\r\n        gridlines : {multiple : 1}\r\n      },\r\n      vAxis: {\r\n        title: props.axisTitle,\r\n        gridlines: {color: '#787878'},\r\n        textStyle: chartTextStyle,\r\n          titleTextStyle: chartTextStyle,\r\n        format: '0'\r\n      },\r\n      legend:{\r\n        textStyle: chartTextStyle\r\n      },\r\n      backgroundColor : { fill:'transparent' }\r\n    }}\r\n  />\r\n  )\r\n}\r\n  \r\nexport default StyledChart;","import React from 'react'; \r\nimport ReactDOM from 'react-dom'; \r\nimport StyledChart from './StyledBarChart'\r\n\r\nfunction TypeChart(props) {\r\n\r\n    const numMovies = props.data != null ? props.data.Movie : 0;\r\n    const numShows = props.data != null ? props.data['TV Show'] : 0;\r\n\r\n    return (\r\n        props.data === null ? <p>Loading...</p> : \r\n            <StyledChart \r\n              title={'Netflix contains ' + numMovies + ' movies and '+ numShows +' TV Shows'}\r\n              data={[\r\n                ['Type', 'Number of Titles'],\r\n                ['Movies', numMovies],\r\n                ['TV Shows', numShows]\r\n              ]}  \r\n              axisTitle='Type'\r\n            />\r\n    );\r\n  }\r\n\r\nexport default TypeChart;","import React from 'react'; \r\nimport ReactDOM from 'react-dom'; \r\nimport { Link } from 'react-router-dom';\r\nimport StyledChart from './StyledBarChart'\r\n\r\nfunction DirectorChart(props) {\r\n\r\n    const directorNames = props.data === null ? [] : Object.keys(props.data);\r\n    let directorHeaders = [\r\n      ['Director Name', 'Number of Titles', { role: 'annotation' }]\r\n    ];\r\n    const directorTemplate = (name) => [name, props.data[name], props.data[name]];\r\n    const directorData = directorHeaders.concat(directorNames.map(name => directorTemplate(name)));\r\n\r\n    return (\r\n      directorData === null ? <p>Loading...</p> : \r\n        <StyledChart \r\n        title='Top 5 directors with the most titles'\r\n        data={directorData}  \r\n        height={'50vh'}\r\n        axisTitle='Director'\r\n      />\r\n    );\r\n  }\r\n\r\nexport default DirectorChart;","import React from 'react'; \r\nimport ReactDOM from 'react-dom'; \r\nimport StyledChart from './StyledBarChart'\r\n\r\nfunction CastChart(props) {\r\n\r\n    const castNames = props.data === null ? [] : Object.keys(props.data);\r\n    let castHeaders = [\r\n      ['Country Name', 'Number of Titles', { role: 'annotation' }]\r\n    ];\r\n    const castData = castHeaders.concat(castNames.map((name) => [name, props.data[name], props.data[name]]))\r\n\r\n    return (\r\n      castData === null ? <p>Loading...</p> : \r\n        <StyledChart \r\n        title='Top 5 cast members with the most titles'\r\n        data={castData}  \r\n        height={'50vh'}\r\n        axisTitle='Cast Member'\r\n      />\r\n    );\r\n  }\r\n\r\nexport default CastChart;","import React from 'react'; \r\nimport ReactDOM from 'react-dom'; \r\nimport StyledChart from './StyledBarChart'\r\n\r\nfunction CountryChart(props) {\r\n\r\n    const countryNames = props.data === null ? [] : Object.keys(props.data);\r\n    let countryHeaders = [\r\n      ['Country', 'Number of Titles', { role: 'annotation' }]\r\n    ];\r\n    const countryData = countryHeaders.concat(countryNames.map((name) => [name, props.data[name], props.data[name]]))\r\n\r\n    return (\r\n      countryData === null ? <p>Loading...</p> : \r\n        <StyledChart \r\n        title='Top 10 countries with the most titles'\r\n        data={countryData}  \r\n        height={'60vh'}\r\n        axisTitle='Country'\r\n      />\r\n    );\r\n  }\r\n\r\nexport default CountryChart;","import React from 'react'; \r\nimport ReactDOM from 'react-dom'; \r\nimport StyledChart from './StyledBarChart'\r\n\r\nfunction YearChart(props) {\r\n\r\n    const yearNames = props.data === null ? [] : Object.keys(props.data);\r\n    let yearHeaders = [\r\n      ['Year', 'Number of Titles', { role: 'annotation' }]\r\n    ];\r\n    const yearData = yearHeaders.concat(yearNames.map((name) => [name, props.data[name], props.data[name]]))\r\n\r\n    return (\r\n      yearData === null ? <p>Loading...</p> : \r\n        <StyledChart \r\n        title={props.title}\r\n        data={yearData}  \r\n        height={'60vh'}\r\n        axisTitle='Year'\r\n      />\r\n    );\r\n  }\r\n\r\nexport default YearChart;","import React from 'react'; \r\nimport ReactDOM from 'react-dom'; \r\nimport StyledChart from './StyledBarChart'\r\n\r\nfunction ListedInChart(props) {\r\n\r\n    const listedInNames = props.data === null ? [] : Object.keys(props.data);\r\n    let listedInHeaders = [\r\n      ['Listed In', 'Number of Titles', { role: 'annotation' }]\r\n    ];\r\n    const listedInData = listedInHeaders.concat(listedInNames.map((name) => [name, props.data[name], props.data[name]]))\r\n\r\n    return (\r\n      listedInData === null ? <p>Loading...</p> : \r\n        <StyledChart \r\n        title='Top 10 Categories titles are listed in'\r\n        data={listedInData}  \r\n        height={'60vh'}\r\n        axisTitle='Listed In'\r\n      />\r\n    );\r\n  }\r\n\r\nexport default ListedInChart;","const apiRoute = 'https://dklitsch.pythonanywhere.com'\r\n\r\nexport default apiRoute;","import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom'; \r\nimport useFetch from '../UseFetch';\r\nimport TypeChart from '../TypeChart';\r\nimport DirectorChart from '../DirectorChart';\r\nimport CastChart from '../CastChart';\r\nimport CountryBarChart from '../CountryBarChart';\r\nimport YearChart from '../YearChart';\r\nimport ListedInChart from '../ListedInChart';\r\nimport apiRoute from '../ApiData';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction HomeView(props) {\r\n\r\n    const typeData = useFetch(`${apiRoute}/type`);\r\n\r\n    const directorData = useFetch(`${apiRoute}/director/top5`);\r\n\r\n    const castData = useFetch(`${apiRoute}/cast/top5`);\r\n\r\n    const countryTop10Data = useFetch(`${apiRoute}/country/top10`);\r\n\r\n    const topYearData = useFetch(`${apiRoute}/releaseyear/top10`);\r\n\r\n    const bottomYearData = useFetch(`${apiRoute}/releaseyear/bottom10`);\r\n\r\n    const listedInData = useFetch(`${apiRoute}/listedin/top10`);\r\n\r\n    const oldestMovies = useFetch(`${apiRoute}/movie?order=asc&take=5`);\r\n\r\n    const oldestTV = useFetch(`${apiRoute}/tvshow?order=asc&take=5`);\r\n\r\n    const linkToDirector = (directorList) => {\r\n      return directorList.split(\", \").map(director => <Link to={`/Netflix-Analysis-Frontend/director/${director}`}>{director}</Link>).reduce((prev, curr) => [prev, ', ', curr])\r\n    }\r\n\r\n    return (\r\n    <>\r\n        <p>\r\n          Hi, welcome to my Netflix Analysis Dashboard!\r\n        </p>\r\n\r\n        <p>This dashboard displays some interesting statistics about Netflix titles. The goal is to present the data in an intuitive and accessable way.</p>\r\n        \r\n        <p>This project is based on <a href=\"https://www.kaggle.com/shivamb/netflix-shows\" target=\"_blank\">this</a> dataset from Flixable. </p>\r\n\r\n        <TypeChart data={typeData} />\r\n\r\n        <DirectorChart data={directorData} />\r\n\r\n        <p>Only around 7% of TV shows list directors, notable exceptions being documentarians like Alastair Fothergill with 3 titles and Ken Burns with 2.</p>\r\n\r\n        <CastChart data={castData} />\r\n\r\n        <CountryBarChart data={countryTop10Data} />\r\n\r\n        <h2>Netflix skews heavily towards newer titles, half of all titles were released after 2017!</h2>\r\n\r\n        <img src={`${apiRoute}/releaseyear/yearchart.png`}></img>\r\n\r\n        <YearChart data={topYearData} title='10 years with the most Netflix titles'/>\r\n\r\n        <YearChart data={bottomYearData} title='10 years with the least Netflix titles'/>\r\n\r\n        <h2>Top 5 Oldest movies</h2>\r\n\r\n        <ol>\r\n          {oldestMovies != null && oldestMovies.map( d => <li key= {d.title}>{d.title} by {linkToDirector(d.director) ?? 'unlisted'} - {d['release_year']}</li>)}\r\n        </ol>\r\n\r\n        <h2>Top 5 Oldest TV shows</h2>\r\n\r\n        <ol>\r\n          {oldestTV != null && oldestTV.map( d => <li key= {d.title}>{d.title} - {d['release_year']}</li>)}\r\n        </ol>\r\n\r\n        <ListedInChart data={listedInData} />\r\n        \r\n    </>\r\n    );\r\n  }\r\n\r\nexport default HomeView;","import { makeStyles } from '@material-ui/styles';\r\nimport React from 'react'; \r\nimport ReactDOM from 'react-dom'; \r\nimport { useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport apiRoute from '../ApiData';\r\nimport useFetch from '../UseFetch';\r\n\r\nfunction DirectorView(props) {\r\n\r\n    const { name } = useParams();\r\n\r\n    const capitalizeName = (name) => name.replace(/\\w\\S*/g, (w) => (w.replace(/^\\w/, (c) => c.toUpperCase())))\r\n    const directorData = useFetch(`${apiRoute}/director/${name}`);\r\n    const directorCollabs = useFetch(`${apiRoute}/director/${name}/director collabs`);\r\n    const castCollabs = useFetch(`${apiRoute}/director/${name}/cast collabs`);\r\n    const codirectorNames = directorCollabs === null ? [] : Object.keys(directorCollabs);\r\n    const collabNames = castCollabs === null ? [] : Object.keys(castCollabs);\r\n    let cleanedCollabs = collabNames.map(name => { return { name: name, count: castCollabs[name]}})\r\n    \r\n    const linkCountries = (countryList) => {\r\n      console.log(countryList.split(\", \").map(country => <Link to={`/Netflix-Analysis-Frontend/country/${country}`}>country</Link>))\r\n      return countryList.split(\", \").map(country => <Link to={`/Netflix-Analysis-Frontend/country/${country}`}>{country}</Link>).reduce((prev, curr) => [prev, ', ', curr])\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {directorData != null &&\r\n          <div>\r\n            <h2>{capitalizeName(name)}</h2>\r\n            <h4>{directorData.length} Titles: </h4>\r\n            <p>\r\n              {directorData.map( d => <div key={d.title}>{d.title} - {linkCountries(d.country)} - {d['release_year']}</div>)}\r\n            </p>\r\n            <h4>Frequent co-directors: </h4>\r\n            <p>\r\n              {codirectorNames.map(name => <div key={name}><Link to={`/Netflix-Analysis-Frontend/director/${name}`}>{name}</Link>: {directorCollabs[name]} titles</div>)}\r\n            </p>\r\n            <h4>Frequent collaborators: </h4>\r\n            <p>\r\n              {cleanedCollabs.map(a => <div key={a.name}><Link to={`/Netflix-Analysis-Frontend/cast/${a.name}`}>{a.name}</Link>: {a.count} titles</div>)}\r\n            </p>\r\n          </div>}\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default DirectorView;","import React, { useRef, useState } from 'react'; \r\nimport ReactDOM from 'react-dom';\r\nimport { Input, Typography } from '@material-ui/core';\r\nimport { Popover } from 'react-tiny-popover'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport apiRoute from './ApiData';\r\nimport useFetch from './UseFetch';\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport { Redirect } from 'react-router';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginRight: theme.spacing(2),\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: 'auto',\r\n      },\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: '60ch',\r\n      },\r\n      color: 'white'\r\n    },\r\n    typography: {\r\n        padding: theme.spacing(1),\r\n      },\r\n  }))\r\n\r\n  export default function SearchBar(props) {\r\n    const classes = useStyles();\r\n\r\n    const [searchFieldValue, setSearchFieldValue] = useState('');\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [redirectLink, setRedirectLink] = useState('');\r\n    const searchTerms = useFetch(`${apiRoute}/searchterms/${inputValue}`) ?? []\r\n    const searchBoxId = 'search-box';\r\n\r\n    const handleSubmit = (e) => {\r\n        if (searchFieldValue?.type != null && searchFieldValue?.term != null)\r\n          {\r\n            setRedirectLink(`/Netflix-Analysis-Frontend/${searchFieldValue?.type}/${searchFieldValue?.term}`);\r\n          }   \r\n        e.preventDefault();  \r\n      }\r\n\r\n      return(\r\n        <div>\r\n        {redirectLink !== '' && <Redirect to={redirectLink} />}\r\n        <div className={classes.search}>\r\n        <div className={classes.searchIcon}>\r\n            <SearchIcon />\r\n        </div>\r\n        <form onSubmit={handleSubmit} >\r\n        <Autocomplete\r\n                className={classes.inputRoot}\r\n                options={searchTerms}\r\n                getOptionLabel={(option) => option != '' ? `${option.type}: ${option.term}` : ''}\r\n                size=\"small\"\r\n                value={searchFieldValue}\r\n                onChange={(event, option) => {\r\n                    setSearchFieldValue(option);\r\n                  }}\r\n                inputValue={inputValue}\r\n                onInputChange={(event, newInputValue) => {\r\n                    setInputValue(newInputValue);\r\n                  }}\r\n                renderInput={(params) => (\r\n                    \r\n                    <div ref={params.InputProps.ref}>\r\n                        <Input style={{ width: 400 }} \r\n                            aria-describedby={searchBoxId}\r\n                            type=\"text\" {...params.inputProps} \r\n                            className={classes.inputInput}\r\n                        />\r\n                    </div>\r\n                )}\r\n            />\r\n        </form>\r\n        </div>\r\n        </div>\r\n      )\r\n  }","import React, { useRef, useState, useEffect } from 'react'; \r\nimport ReactDOM from 'react-dom';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { AppBar, fade, Grid, IconButton, Menu, MenuItem, Toolbar, Typography } from '@material-ui/core';\r\nimport SearchBar from './SearchBar';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  popover: { \r\n    backgroundColor: fade(theme.palette.common.white, 0.15), \r\n    padding: '.5em',\r\n    borderRadius: '1em',\r\n    border: '1px solid black'\r\n  }\r\n}))\r\n\r\nexport default function AnalysisAppBar(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const divRef = useRef();\r\n  const [showTutorial, setShowTutorial] = useState(true);\r\n\r\n  const handleMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const closeTutorial = () => {setShowTutorial(false)}\r\n\r\n  useEffect(()=>{\r\n    if (showTutorial)\r\n    {\r\n      divRef.current.focus();\r\n    }\r\n  });\r\n\r\n    return (\r\n        <AppBar color=\"primary\" position=\"fixed\">\r\n        <Toolbar>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n              <MenuIcon onClick={handleMenuOpen} />\r\n              <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleMenuClose}\r\n              >\r\n                <MenuItem onClick={handleMenuClose}><Link to='/Netflix-Analysis-Frontend'>Home</Link></MenuItem>\r\n              </Menu>\r\n            </IconButton>\r\n            <div>\r\n              <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"flex-end\"\r\n              alignItems=\"center\"\r\n              >\r\n                { showTutorial &&   \r\n                  <Typography \r\n                    ref={divRef} \r\n                    onBlur={() => closeTutorial()} \r\n                    tabindex=\"0\"\r\n                    className={classes.popover}\r\n                  >Use this box to search for directors, actors and more -></Typography>\r\n                }\r\n                <SearchBar></SearchBar>\r\n                <Typography variant=\"h6\">Netflix Analysis Dashboard</Typography>\r\n              </Grid>\r\n            </div>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n}","import { makeStyles } from '@material-ui/styles';\r\nimport React from 'react'; \r\nimport ReactDOM from 'react-dom'; \r\nimport { useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport apiRoute from '../ApiData';\r\nimport useFetch from '../UseFetch';\r\n\r\nfunction CastView(props) {\r\n\r\n    const { name } = useParams();\r\n\r\n    const capitalizeName = (name) => name.replace(/\\w\\S*/g, (w) => (w.replace(/^\\w/, (c) => c.toUpperCase())))\r\n    const castData = useFetch(`${apiRoute}/cast/${name}`);\r\n    const directorCollabs = useFetch(`${apiRoute}/cast/${name}/director collabs`);\r\n    const castCollabs = useFetch(`${apiRoute}/director/${name}/cast collabs`);\r\n    const codirectorNames = directorCollabs === null ? [] : Object.keys(directorCollabs);\r\n    const collabNames = castCollabs === null ? [] : Object.keys(castCollabs);\r\n    let cleanedCollabs = collabNames.map(name => { return { name: name, count: castCollabs[name]}})\r\n\r\n    const linkCountries = (countryList) => {\r\n      return countryList.split(\", \").map(country => <Link to={`/Netflix-Analysis-Frontend/country/${country}`}>{country}</Link>).reduce((prev, curr) => [prev, ', ', curr])\r\n    }\r\n    \r\n\r\n    return (\r\n      <div>\r\n        {castData != null &&\r\n          <div>\r\n            <h2>{capitalizeName(name)}</h2>\r\n            <h4>{castData.length} Titles: </h4>\r\n            <p>\r\n              {castData.map(d => <div key={d.title}>{d.title} - {linkCountries(d.country)} - {d['release_year']}</div>)}\r\n            </p>\r\n            <h4>Frequent directed by: </h4>\r\n            <p>\r\n              {codirectorNames.map(name => <div key={name}><Link to={`/Netflix-Analysis-Frontend/director/${name}`}>{name}</Link>: {directorCollabs[name]} titles</div>)}\r\n            </p>\r\n            <h4>Frequent collaborators: </h4>\r\n            <p>\r\n              {cleanedCollabs.map(a => <div key={a.name}><Link to={`/Netflix-Analysis-Frontend/cast/${a.name}`}>{a.name}</Link>: {a.count} titles</div>)}\r\n            </p>\r\n          </div>}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default CastView;","export const capitalizeName = (name) => name.replace(/\\w\\S*/g, (w) => (w.replace(/^\\w/, (c) => c.toUpperCase())))","import { makeStyles } from '@material-ui/styles';\r\nimport React from 'react'; \r\nimport ReactDOM from 'react-dom'; \r\nimport { useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport apiRoute from '../ApiData';\r\nimport StyledLineChart from '../StyledLineChart';\r\nimport useFetch from '../UseFetch';\r\nimport { capitalizeName } from '../Utilities';\r\n\r\nfunction CountryView(props) {\r\n\r\n    const { name } = useParams();\r\n\r\n    const countryData = useFetch(`${apiRoute}/country/${name}`);\r\n    const directorNames = countryData === null ? [] : Object.keys(countryData.topDirectors);\r\n    const castNames = countryData === null ? [] : Object.keys(countryData.topCast);\r\n    let cleanedDirectors = directorNames.map(name => { return { name: name, count: countryData.topDirectors[name]}}).sort((a, b) => b.count - a.count);\r\n    let cleanedCast = castNames.map(name => { return { name: name, count: countryData.topCast[name]}}).sort((a, b) => b.count - a.count); \r\n\r\n    return (\r\n      <div>\r\n        {countryData != null &&\r\n          <div>\r\n            <h2>{capitalizeName(name)}</h2>\r\n            <h4>{countryData.titleCount} Titles: </h4>\r\n            <h4>Prolific directors: </h4>\r\n            <p>\r\n              {\r\n                cleanedDirectors.map(a => <div key={a.name}><Link to={`/Netflix-Analysis-Frontend/director/${a.name}`}>{a.name}</Link>: {a.count} titles</div>)\r\n              }\r\n            </p>\r\n            <h4>Frequent cast members: </h4>\r\n            <p>\r\n              {\r\n                cleanedCast.map(a => <div key={a.name}><Link to={`/Netflix-Analysis-Frontend/cast/${a.name}`}>{a.name}</Link>: {a.count} titles</div>)\r\n              }\r\n            </p>\r\n          </div>}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default CountryView;","import './App.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, } from \"react-router-dom\";\r\nimport { Toolbar } from '@material-ui/core';\r\nimport HomeView from './components/Views/HomeView'\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport DirectorView from './components/Views/DirectorView';\r\nimport AnalysisAppBar from './components/AnalysisAppBar';\r\nimport CastView from './components/Views/CastView';\r\nimport CountryView from './components/Views/CountryView';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#0f4c75',\r\n    }\r\n  },\r\n});\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Router>\r\n      <ThemeProvider theme={theme}>\r\n        <div class=\"App\">\r\n          \r\n          <AnalysisAppBar />\r\n\r\n          <Toolbar></Toolbar>\r\n          \r\n          <Switch>\r\n            <Route path=\"/Netflix-Analysis-Frontend/director/:name\" children={<DirectorView/>} />\r\n            <Route path=\"/Netflix-Analysis-Frontend/cast/:name\" children={<CastView/>} />\r\n            <Route path=\"/Netflix-Analysis-Frontend/country/:name\" children={<CountryView/>} />\r\n            <Route path=\"/\" component={HomeView} />\r\n          </Switch>\r\n        </div>\r\n      </ThemeProvider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <App />, document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}